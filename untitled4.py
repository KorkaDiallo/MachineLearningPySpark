# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1shiux6TPOg1zEKj2JGXv8OCAJmlsbpZ_
"""

from pyspark.sql import Row
from pyspark.sql import HiveContext
import pyspark
from IPython.display import display
import matplotlib
import matplotlib.pyplot as plt
sc = pyspark.SparkContext()
sqlContext = HiveContext(sc)
test_list = [(1, 'hasan'),(2, 'nana'),(3, 'dad'),(4, 'mon')]
rdd = sc.parallelize(test_list)
people = rdd.map(lambda x: Row(id=int(x[0]), name=x[1]))
schemaPeople = sqlContext.createDataFrame(people)
# Register it as a temp table
sqlContext.registerDataFrameAsTable(schemaPeople, "test_table")
df1=sqlContext.sql("Select * from test_table")
pdf1=df1.toPandas()
pdf1.plot(kind='barh',x='name',y='id',colormap='winter_r')

trip_path ="/content/tripA_10-06-2021.csv"
vendor_path = "/content/vendorA_11-06-2021.csv"
zone_path = "/content/zoneA_11-06-2021.csv"

trip_df = sqlContext.read.format("com.databricks.spark.csv").option("inferScheme","true").option("header","true").load(trip_path)
vendor_df = sqlContext.read.format("com.databricks.spark.csv").option("inferScheme","true").option("header","true").load(vendor_path);
zone_df = sqlContext.read.format("com.databricks.spark.csv").option("inferScheme","true").option("header","true").load(zone_path);

trip_df.createOrReplaceTempView("trip")
vendor_df.createOrReplaceTempView("vendor")
zone_df.createOrReplaceTempView("location")

trip_by_location_PULocationID = sqlContext.sql("SELECT location.Borough,count(trip.PULocationID) as nb_trip FROM trip join location on (trip.PULocationID = location.LocationID) group by location.Borough")
trip_by_location_DOLocationID = sqlContext.sql("SELECT location.Borough,count(trip.DOLocationID) as nb_trip FROM trip join location on (trip.DOLocationID = location.LocationID) group by location.Borough")

trip_by_location_PULocationID.show()
trip_by_location_DOLocationID.show()

ptrip_by_location_PULocationID=trip_by_location_PULocationID.toPandas()
ptrip_by_location_PULocationID.plot(kind='barh',x='Borough',y='nb_trip',colormap='winter_r',title='Nombre de trajets sortants par ville')

ptrip_by_location_DOLocationID=trip_by_location_DOLocationID.toPandas()
ptrip_by_location_DOLocationID.plot(kind='barh',x='Borough',y='nb_trip',title='Nombre de trajets entrants par ville',ylabel='Nombre de trajets')

import matplotlib.pyplot as plt
import numpy as np


labels = ['G1', 'G2', 'G3', 'G4', 'G5']
men_means = [20, 34, 30, 35, 27]
women_means = [25, 32, 34, 20, 25]

x = np.arange(len(labels))  # the label locations
width = 0.35  # the width of the bars

fig, ax = plt.subplots()
rects1 = ax.bar(x - width/2, men_means, width, label='Men')
rects2 = ax.bar(x + width/2, women_means, width, label='Women')

# Add some text for labels, title and custom x-axis tick labels, etc.
ax.set_ylabel('Scores')
ax.set_title('Scores by group and gender')
ax.set_xticks(x)
ax.set_xticklabels(labels)
ax.legend()

fig.tight_layout()

plt.show()